%!PS-Adobe-2.0 EPSF-2.0
%%BoundingBox: 125 396 462 679
%%HiResBoundingBox: 125.106 396.834 461.490 678.678
%%Creator: dvips(k) 5.95a Copyright 2005 Radical Eye Software
%%Title: unnamed_.dvi
%%DocumentFonts: Helvetica CMR10
%%EndComments
%DVIPSWebPage: (www.radicaleye.com)
%DVIPSCommandLine: dvips -D600 -E* -ounnamed_.eps unnamed_.dvi
%DVIPSParameters: dpi=600
%DVIPSSource:  TeX output 2007.12.24:1006
%%BeginProcSet: tex.pro 0 0
%!
/TeXDict 300 dict def TeXDict begin/N{def}def/B{bind def}N/S{exch}N/X{S
N}B/A{dup}B/TR{translate}N/isls false N/vsize 11 72 mul N/hsize 8.5 72
mul N/landplus90{false}def/@rigin{isls{[0 landplus90{1 -1}{-1 1}ifelse 0
0 0]concat}if 72 Resolution div 72 VResolution div neg scale isls{
landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div hsize
mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul TR[
matrix currentmatrix{A A round sub abs 0.00001 lt{round}if}forall round
exch round exch]setmatrix}N/@landscape{/isls true N}B/@manualfeed{
statusdict/manualfeed true put}B/@copies{/#copies X}B/FMat[1 0 0 -1 0 0]
N/FBB[0 0 0 0]N/nn 0 N/IEn 0 N/ctr 0 N/df-tail{/nn 8 dict N nn begin
/FontType 3 N/FontMatrix fntrx N/FontBBox FBB N string/base X array
/BitMaps X/BuildChar{CharBuilder}N/Encoding IEn N end A{/foo setfont}2
array copy cvx N load 0 nn put/ctr 0 N[}B/sf 0 N/df{/sf 1 N/fntrx FMat N
df-tail}B/dfs{div/sf X/fntrx[sf 0 0 sf neg 0 0]N df-tail}B/E{pop nn A
definefont setfont}B/Cw{Cd A length 5 sub get}B/Ch{Cd A length 4 sub get
}B/Cx{128 Cd A length 3 sub get sub}B/Cy{Cd A length 2 sub get 127 sub}
B/Cdx{Cd A length 1 sub get}B/Ci{Cd A type/stringtype ne{ctr get/ctr ctr
1 add N}if}B/CharBuilder{save 3 1 roll S A/base get 2 index get S
/BitMaps get S get/Cd X pop/ctr 0 N Cdx 0 Cx Cy Ch sub Cx Cw add Cy
setcachedevice Cw Ch true[1 0 0 -1 -.1 Cx sub Cy .1 sub]{Ci}imagemask
restore}B/D{/cc X A type/stringtype ne{]}if nn/base get cc ctr put nn
/BitMaps get S ctr S sf 1 ne{A A length 1 sub A 2 index S get sf div put
}if put/ctr ctr 1 add N}B/I{cc 1 add D}B/bop{userdict/bop-hook known{
bop-hook}if/SI save N @rigin 0 0 moveto/V matrix currentmatrix A 1 get A
mul exch 0 get A mul add .99 lt{/QV}{/RV}ifelse load def pop pop}N/eop{
SI restore userdict/eop-hook known{eop-hook}if showpage}N/@start{
userdict/start-hook known{start-hook}if pop/VResolution X/Resolution X
1000 div/DVImag X/IEn 256 array N 2 string 0 1 255{IEn S A 360 add 36 4
index cvrs cvn put}for pop 65781.76 div/vsize X 65781.76 div/hsize X}N
/p{show}N/RMat[1 0 0 -1 0 0]N/BDot 260 string N/Rx 0 N/Ry 0 N/V{}B/RV/v{
/Ry X/Rx X V}B statusdict begin/product where{pop false[(Display)(NeXT)
(LaserWriter 16/600)]{A length product length le{A length product exch 0
exch getinterval eq{pop true exit}if}{pop}ifelse}forall}{false}ifelse
end{{gsave TR -.1 .1 TR 1 1 scale Rx Ry false RMat{BDot}imagemask
grestore}}{{gsave TR -.1 .1 TR Rx Ry scale 1 1 false RMat{BDot}
imagemask grestore}}ifelse B/QV{gsave newpath transform round exch round
exch itransform moveto Rx 0 rlineto 0 Ry neg rlineto Rx neg 0 rlineto
fill grestore}B/a{moveto}B/delta 0 N/tail{A/delta X 0 rmoveto}B/M{S p
delta add tail}B/b{S p tail}B/c{-4 M}B/d{-3 M}B/e{-2 M}B/f{-1 M}B/g{0 M}
B/h{1 M}B/i{2 M}B/j{3 M}B/k{4 M}B/w{0 rmoveto}B/l{p -4 w}B/m{p -3 w}B/n{
p -2 w}B/o{p -1 w}B/q{p 1 w}B/r{p 2 w}B/s{p 3 w}B/t{p 4 w}B/x{0 S
rmoveto}B/y{3 2 roll p a}B/bos{/SS save N}B/eos{SS restore}B end

%%EndProcSet
%%BeginProcSet: psfrag.pro 0 0
%%
%% This is file `psfrag.pro',
%% generated with the docstrip utility.
%%
%% The original source files were:
%%
%% psfrag.dtx  (with options: `filepro')
%% 
%% Copyright (c) 1996 Craig Barratt, Michael C. Grant, and David Carlisle.
%% All rights reserved.
%% 
%% This file is part of the PSfrag package.
%% 
userdict begin
/PSfragLib 90 dict def
/PSfragDict 6 dict def
/PSfrag { PSfragLib begin load exec end } bind def
end
PSfragLib begin
/RO /readonly      load def
/CP /currentpoint  load def
/CM /currentmatrix load def
/B { bind RO def } bind def
/X { exch def } B
/MD { { X } forall } B
/OE { end exec PSfragLib begin } B
/S false def
/tstr 8 string def
/islev2 { languagelevel } stopped { false } { 2 ge } ifelse def
[ /sM /tM /srcM /dstM /dM /idM /srcFM /dstFM ] { matrix def } forall
sM currentmatrix RO pop
dM defaultmatrix RO idM invertmatrix RO pop
srcFM identmatrix pop
/Hide { gsave { CP } stopped not newpath clip { moveto } if } B
/Unhide { { CP } stopped not grestore { moveto } if } B
/setrepl islev2 {{ /glob currentglobal def true setglobal array astore
                   globaldict exch /PSfrags exch put glob setglobal }}
                {{ array astore /PSfrags X }} ifelse B
/getrepl islev2 {{ globaldict /PSfrags get aload length }}
                {{ PSfrags aload length }} ifelse B
/convert {
   /src X src length string
   /c 0 def src length {
      dup c src c get dup 32 lt { pop 32 } if put /c c 1 add def
   } repeat
} B
/Begin {
    /saver save def
    srcFM exch 3 exch put
    0 ne /debugMode X 0 setrepl
    dup /S exch dict def { S 3 1 roll exch convert exch put } repeat
    srcM CM dup invertmatrix pop
    mark { currentdict { end } stopped { pop exit } if } loop
    PSfragDict counttomark { begin } repeat pop
} B
/End {
    mark { currentdict end dup PSfragDict eq { pop exit } if } loop
    counttomark { begin } repeat pop
    getrepl saver restore
    7 idiv dup /S exch dict def {
        6 array astore /mtrx X tstr cvs /K X
        S K [ S K known { S K get aload pop } if mtrx ] put
    } repeat
} B
/Place {
    tstr cvs /K X
    S K known {
        bind /proc X tM CM pop
        CP /cY X /cX X
        0 0 transform idtransform neg /aY X neg /aX X
        S K get dup length /maxiter X
        /iter 1 def {
            iter maxiter ne { /saver save def } if
            tM setmatrix aX aY translate
            [ exch aload pop idtransform ] concat
            cX neg cY neg translate cX cY moveto
            /proc load OE
            iter maxiter ne { saver restore /iter iter 1 add def } if
        } forall
        /noXY { CP /cY X /cX X } stopped def
        tM setmatrix noXY { newpath } { cX cY moveto } ifelse
    } {
        Hide OE Unhide
    } ifelse
} B
/normalize {
    2 index dup mul 2 index dup mul add sqrt div
    dup 4 -1 roll exch mul 3 1 roll mul
} B
/replace {
    aload pop MD
    CP /bY X /lX X gsave sM setmatrix
    str stringwidth abs exch abs add dup 0 eq
        { pop } { 360 exch div dup scale } ifelse
    lX neg bY neg translate newpath lX bY moveto
    str { /ch X ( ) dup 0 ch put false charpath ch Kproc } forall
    flattenpath pathbbox [ /uY /uX /lY /lX ] MD
    CP grestore moveto
    currentfont /FontMatrix get dstFM copy dup
    0 get 0 lt { uX lX /uX X /lX X } if
    3 get 0 lt { uY lY /uY X /lY X } if
    /cX uX lX add 0.5 mul def
    /cY uY lY add 0.5 mul def
    debugMode { gsave 0 setgray 1 setlinewidth
        lX lY moveto lX uY lineto uX uY lineto uX lY lineto closepath
        lX bY moveto uX bY lineto lX cY moveto uX cY lineto
        cX lY moveto cX uY lineto stroke
    grestore } if
    dstFM dup invertmatrix dstM CM srcM
    2 { dstM concatmatrix } repeat pop
    getrepl /temp X
        S str convert get {
            aload pop [ /rot /scl /loc /K ] MD
            /aX cX def /aY cY def
            loc {
                dup 66  eq { /aY bY def } { % B
                dup 98  eq { /aY lY def } { % b
                dup 108 eq { /aX lX def } { % l
                dup 114 eq { /aX uX def } { % r
                dup 116 eq { /aY uY def }   % t
                if } ifelse } ifelse } ifelse } ifelse pop
            } forall
            K srcFM rot tM rotate dstM
            2 { tM concatmatrix } repeat aload pop pop pop
            2 { scl normalize 4 2 roll } repeat
            aX aY transform
            /temp temp 7 add def
        } forall
    temp setrepl
} B
/Rif {
    S 3 index convert known { pop replace } { exch pop OE } ifelse
} B
/XA { bind [ /Kproc /str } B /XC { ] 2 array astore def } B
/xs   { pop } XA XC
/xks  { /kern load OE } XA /kern XC
/xas  { pop ax ay rmoveto } XA /ay /ax XC
/xws  { c eq { cx cy rmoveto } if } XA /c /cy /cx XC
/xaws { ax ay rmoveto c eq { cx cy rmoveto } if }
    XA /ay /ax /c /cy /cx XC
/raws { xaws { awidthshow } Rif } B
/rws  { xws { widthshow } Rif } B
/rks  { xks { kshow } Rif } B
/ras  { xas { ashow } Rif } B
/rs   { xs { show } Rif } B
/rrs { getrepl dup 2 add -1 roll //restore exec setrepl } B
PSfragDict begin
islev2 not { /restore { /rrs PSfrag } B } if
/show       { /rs   PSfrag } B
/kshow      { /rks  PSfrag } B
/ashow      { /ras  PSfrag } B
/widthshow  { /rws  PSfrag } B
/awidthshow { /raws PSfrag } B
end PSfragDict RO pop
end

%%EndProcSet
%%BeginProcSet: texps.pro 0 0
%!
TeXDict begin/rf{findfont dup length 1 add dict begin{1 index/FID ne 2
index/UniqueID ne and{def}{pop pop}ifelse}forall[1 index 0 6 -1 roll
exec 0 exch 5 -1 roll VResolution Resolution div mul neg 0 0]FontType 0
ne{/Metrics exch def dict begin Encoding{exch dup type/integertype ne{
pop pop 1 sub dup 0 le{pop}{[}ifelse}{FontMatrix 0 get div Metrics 0 get
div def}ifelse}forall Metrics/Metrics currentdict end def}{{1 index type
/nametype eq{exit}if exch pop}loop}ifelse[2 index currentdict end
definefont 3 -1 roll makefont/setfont cvx]cvx def}def/ObliqueSlant{dup
sin S cos div neg}B/SlantFont{4 index mul add}def/ExtendFont{3 -1 roll
mul exch}def/ReEncodeFont{CharStrings rcheck{/Encoding false def dup[
exch{dup CharStrings exch known not{pop/.notdef/Encoding true def}if}
forall Encoding{]exch pop}{cleartomark}ifelse}if/Encoding exch def}def
end

%%EndProcSet
%%BeginProcSet: special.pro 0 0
%!
TeXDict begin/SDict 200 dict N SDict begin/@SpecialDefaults{/hs 612 N
/vs 792 N/ho 0 N/vo 0 N/hsc 1 N/vsc 1 N/ang 0 N/CLIP 0 N/rwiSeen false N
/rhiSeen false N/letter{}N/note{}N/a4{}N/legal{}N}B/@scaleunit 100 N
/@hscale{@scaleunit div/hsc X}B/@vscale{@scaleunit div/vsc X}B/@hsize{
/hs X/CLIP 1 N}B/@vsize{/vs X/CLIP 1 N}B/@clip{/CLIP 2 N}B/@hoffset{/ho
X}B/@voffset{/vo X}B/@angle{/ang X}B/@rwi{10 div/rwi X/rwiSeen true N}B
/@rhi{10 div/rhi X/rhiSeen true N}B/@llx{/llx X}B/@lly{/lly X}B/@urx{
/urx X}B/@ury{/ury X}B/magscale true def end/@MacSetUp{userdict/md known
{userdict/md get type/dicttype eq{userdict begin md length 10 add md
maxlength ge{/md md dup length 20 add dict copy def}if end md begin
/letter{}N/note{}N/legal{}N/od{txpose 1 0 mtx defaultmatrix dtransform S
atan/pa X newpath clippath mark{transform{itransform moveto}}{transform{
itransform lineto}}{6 -2 roll transform 6 -2 roll transform 6 -2 roll
transform{itransform 6 2 roll itransform 6 2 roll itransform 6 2 roll
curveto}}{{closepath}}pathforall newpath counttomark array astore/gc xdf
pop ct 39 0 put 10 fz 0 fs 2 F/|______Courier fnt invertflag{PaintBlack}
if}N/txpose{pxs pys scale ppr aload pop por{noflips{pop S neg S TR pop 1
-1 scale}if xflip yflip and{pop S neg S TR 180 rotate 1 -1 scale ppr 3
get ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg TR}if xflip
yflip not and{pop S neg S TR pop 180 rotate ppr 3 get ppr 1 get neg sub
neg 0 TR}if yflip xflip not and{ppr 1 get neg ppr 0 get neg TR}if}{
noflips{TR pop pop 270 rotate 1 -1 scale}if xflip yflip and{TR pop pop
90 rotate 1 -1 scale ppr 3 get ppr 1 get neg sub neg ppr 2 get ppr 0 get
neg sub neg TR}if xflip yflip not and{TR pop pop 90 rotate ppr 3 get ppr
1 get neg sub neg 0 TR}if yflip xflip not and{TR pop pop 270 rotate ppr
2 get ppr 0 get neg sub neg 0 S TR}if}ifelse scaleby96{ppr aload pop 4
-1 roll add 2 div 3 1 roll add 2 div 2 copy TR .96 dup scale neg S neg S
TR}if}N/cp{pop pop showpage pm restore}N end}if}if}N/normalscale{
Resolution 72 div VResolution 72 div neg scale magscale{DVImag dup scale
}if 0 setgray}N/psfts{S 65781.76 div N}N/startTexFig{/psf$SavedState
save N userdict maxlength dict begin/magscale true def normalscale
currentpoint TR/psf$ury psfts/psf$urx psfts/psf$lly psfts/psf$llx psfts
/psf$y psfts/psf$x psfts currentpoint/psf$cy X/psf$cx X/psf$sx psf$x
psf$urx psf$llx sub div N/psf$sy psf$y psf$ury psf$lly sub div N psf$sx
psf$sy scale psf$cx psf$sx div psf$llx sub psf$cy psf$sy div psf$ury sub
TR/showpage{}N/erasepage{}N/setpagedevice{pop}N/copypage{}N/p 3 def
@MacSetUp}N/doclip{psf$llx psf$lly psf$urx psf$ury currentpoint 6 2 roll
newpath 4 copy 4 2 roll moveto 6 -1 roll S lineto S lineto S lineto
closepath clip newpath moveto}N/endTexFig{end psf$SavedState restore}N
/@beginspecial{SDict begin/SpecialSave save N gsave normalscale
currentpoint TR @SpecialDefaults count/ocount X/dcount countdictstack N}
N/@setspecial{CLIP 1 eq{newpath 0 0 moveto hs 0 rlineto 0 vs rlineto hs
neg 0 rlineto closepath clip}if ho vo TR hsc vsc scale ang rotate
rwiSeen{rwi urx llx sub div rhiSeen{rhi ury lly sub div}{dup}ifelse
scale llx neg lly neg TR}{rhiSeen{rhi ury lly sub div dup scale llx neg
lly neg TR}if}ifelse CLIP 2 eq{newpath llx lly moveto urx lly lineto urx
ury lineto llx ury lineto closepath clip}if/showpage{}N/erasepage{}N
/setpagedevice{pop}N/copypage{}N newpath}N/@endspecial{count ocount sub{
pop}repeat countdictstack dcount sub{end}repeat grestore SpecialSave
restore end}N/@defspecial{SDict begin}N/@fedspecial{end}B/li{lineto}B
/rl{rlineto}B/rc{rcurveto}B/np{/SaveX currentpoint/SaveY X N 1
setlinecap newpath}N/st{stroke SaveX SaveY moveto}N/fil{fill SaveX SaveY
moveto}N/ellipse{/endangle X/startangle X/yrad X/xrad X/savematrix
matrix currentmatrix N TR xrad yrad scale 0 0 1 startangle endangle arc
savematrix setmatrix}N end

%%EndProcSet
%%BeginProcSet: color.pro 0 0
%!
TeXDict begin/setcmykcolor where{pop}{/setcmykcolor{dup 10 eq{pop
setrgbcolor}{1 sub 4 1 roll 3{3 index add neg dup 0 lt{pop 0}if 3 1 roll
}repeat setrgbcolor pop}ifelse}B}ifelse/TeXcolorcmyk{setcmykcolor}def
/TeXcolorrgb{setrgbcolor}def/TeXcolorgrey{setgray}def/TeXcolorgray{
setgray}def/TeXcolorhsb{sethsbcolor}def/currentcmykcolor where{pop}{
/currentcmykcolor{currentrgbcolor 10}B}ifelse/DC{exch dup userdict exch
known{pop pop}{X}ifelse}B/GreenYellow{0.15 0 0.69 0 setcmykcolor}DC
/Yellow{0 0 1 0 setcmykcolor}DC/Goldenrod{0 0.10 0.84 0 setcmykcolor}DC
/Dandelion{0 0.29 0.84 0 setcmykcolor}DC/Apricot{0 0.32 0.52 0
setcmykcolor}DC/Peach{0 0.50 0.70 0 setcmykcolor}DC/Melon{0 0.46 0.50 0
setcmykcolor}DC/YellowOrange{0 0.42 1 0 setcmykcolor}DC/Orange{0 0.61
0.87 0 setcmykcolor}DC/BurntOrange{0 0.51 1 0 setcmykcolor}DC
/Bittersweet{0 0.75 1 0.24 setcmykcolor}DC/RedOrange{0 0.77 0.87 0
setcmykcolor}DC/Mahogany{0 0.85 0.87 0.35 setcmykcolor}DC/Maroon{0 0.87
0.68 0.32 setcmykcolor}DC/BrickRed{0 0.89 0.94 0.28 setcmykcolor}DC/Red{
0 1 1 0 setcmykcolor}DC/OrangeRed{0 1 0.50 0 setcmykcolor}DC/RubineRed{
0 1 0.13 0 setcmykcolor}DC/WildStrawberry{0 0.96 0.39 0 setcmykcolor}DC
/Salmon{0 0.53 0.38 0 setcmykcolor}DC/CarnationPink{0 0.63 0 0
setcmykcolor}DC/Magenta{0 1 0 0 setcmykcolor}DC/VioletRed{0 0.81 0 0
setcmykcolor}DC/Rhodamine{0 0.82 0 0 setcmykcolor}DC/Mulberry{0.34 0.90
0 0.02 setcmykcolor}DC/RedViolet{0.07 0.90 0 0.34 setcmykcolor}DC
/Fuchsia{0.47 0.91 0 0.08 setcmykcolor}DC/Lavender{0 0.48 0 0
setcmykcolor}DC/Thistle{0.12 0.59 0 0 setcmykcolor}DC/Orchid{0.32 0.64 0
0 setcmykcolor}DC/DarkOrchid{0.40 0.80 0.20 0 setcmykcolor}DC/Purple{
0.45 0.86 0 0 setcmykcolor}DC/Plum{0.50 1 0 0 setcmykcolor}DC/Violet{
0.79 0.88 0 0 setcmykcolor}DC/RoyalPurple{0.75 0.90 0 0 setcmykcolor}DC
/BlueViolet{0.86 0.91 0 0.04 setcmykcolor}DC/Periwinkle{0.57 0.55 0 0
setcmykcolor}DC/CadetBlue{0.62 0.57 0.23 0 setcmykcolor}DC
/CornflowerBlue{0.65 0.13 0 0 setcmykcolor}DC/MidnightBlue{0.98 0.13 0
0.43 setcmykcolor}DC/NavyBlue{0.94 0.54 0 0 setcmykcolor}DC/RoyalBlue{1
0.50 0 0 setcmykcolor}DC/Blue{1 1 0 0 setcmykcolor}DC/Cerulean{0.94 0.11
0 0 setcmykcolor}DC/Cyan{1 0 0 0 setcmykcolor}DC/ProcessBlue{0.96 0 0 0
setcmykcolor}DC/SkyBlue{0.62 0 0.12 0 setcmykcolor}DC/Turquoise{0.85 0
0.20 0 setcmykcolor}DC/TealBlue{0.86 0 0.34 0.02 setcmykcolor}DC
/Aquamarine{0.82 0 0.30 0 setcmykcolor}DC/BlueGreen{0.85 0 0.33 0
setcmykcolor}DC/Emerald{1 0 0.50 0 setcmykcolor}DC/JungleGreen{0.99 0
0.52 0 setcmykcolor}DC/SeaGreen{0.69 0 0.50 0 setcmykcolor}DC/Green{1 0
1 0 setcmykcolor}DC/ForestGreen{0.91 0 0.88 0.12 setcmykcolor}DC
/PineGreen{0.92 0 0.59 0.25 setcmykcolor}DC/LimeGreen{0.50 0 1 0
setcmykcolor}DC/YellowGreen{0.44 0 0.74 0 setcmykcolor}DC/SpringGreen{
0.26 0 0.76 0 setcmykcolor}DC/OliveGreen{0.64 0 0.95 0.40 setcmykcolor}
DC/RawSienna{0 0.72 1 0.45 setcmykcolor}DC/Sepia{0 0.83 1 0.70
setcmykcolor}DC/Brown{0 0.81 1 0.60 setcmykcolor}DC/Tan{0.14 0.42 0.56 0
setcmykcolor}DC/Gray{0 0 0 0.50 setcmykcolor}DC/Black{0 0 0 1
setcmykcolor}DC/White{0 0 0 0 setcmykcolor}DC end

%%EndProcSet
%%BeginFont: CMR10
%!PS-AdobeFont-1.1: CMR10 1.00B
%%CreationDate: 1992 Feb 19 19:54:52
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.00B) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMR10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
end readonly def
/FontName /CMR10 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 1 /Delta put
dup 6 /Sigma put
dup 45 /hyphen put
dup 46 /period put
dup 48 /zero put
dup 49 /one put
dup 50 /two put
dup 51 /three put
dup 52 /four put
dup 53 /five put
dup 54 /six put
dup 55 /seven put
dup 56 /eight put
dup 57 /nine put
dup 65 /A put
dup 68 /D put
dup 70 /F put
dup 73 /I put
dup 76 /L put
dup 77 /M put
dup 78 /N put
dup 80 /P put
dup 82 /R put
dup 83 /S put
dup 84 /T put
dup 97 /a put
dup 99 /c put
dup 101 /e put
dup 102 /f put
dup 103 /g put
dup 105 /i put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
dup 120 /x put
dup 121 /y put
readonly def
/FontBBox{-251 -250 1009 969}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA052A014267B7904EB3C0D3BD0B83D891
016CA6CA4B712ADEB258FAAB9A130EE605E61F77FC1B738ABC7C51CD46EF8171
9098D5FEE67660E69A7AB91B58F29A4D79E57022F783EB0FBBB6D4F4EC35014F
D2DECBA99459A4C59DF0C6EBA150284454E707DC2100C15B76B4C19B84363758
469A6C558785B226332152109871A9883487DD7710949204DDCF837E6A8708B8
2BDBF16FBC7512FAA308A093FE5CF7158F1163BC1F3352E22A1452E73FECA8A4
87100FB1FFC4C8AF409B2067537220E605DA0852CA49839E1386AF9D7A1A455F
D1F017CE45884D76EF2CB9BC5821FD25365DDEA6E45F332B5F68A44AD8A530F0
92A36FAC8D27F9087AFEEA2096F839A2BC4B937F24E080EF7C0F9374A18D565C
295A05210DB96A23175AC59A9BD0147A310EF49C551A417E0A22703F94FF7B75
409A5D417DA6730A69E310FA6A4229FC7E4F620B0FC4C63C50E99E179EB51E4C
4BC45217722F1E8E40F1E1428E792EAFE05C5A50D38C52114DFCD24D54027CBF
2512DD116F0463DE4052A7AD53B641A27E81E481947884CE35661B49153FA19E
0A2A860C7B61558671303DE6AE06A80E4E450E17067676E6BBB42A9A24ACBC3E
B0CA7B7A3BFEA84FED39CCFB6D545BB2BCC49E5E16976407AB9D94556CD4F008
24EF579B6800B6DC3AAF840B3FC6822872368E3B4274DD06CA36AF8F6346C11B
43C772CC242F3B212C4BD7018D71A1A74C9A94ED0093A5FB6557F4E0751047AF
D72098ECA301B8AE68110F983796E581F106144951DF5B750432A230FDA3B575
5A38B5E7972AABC12306A01A99FCF8189D71B8DBF49550BAEA9CF1B97CBFC7CC
96498ECC938B1A1710B670657DE923A659DB8757147B140A48067328E7E3F9C3
7D1888B284904301450CE0BC15EEEA00E48CCD6388F3FC3BEFD8D9C400015B65
0F2F536D035626B1FF0A69D732C7A1836D635C30C06BED4327737029E5BA5830
B9E88A4024C3326AD2F34F47B54739B48825AD6699F7D117EA4C4AEC4440BF6D
AA0099DEFD326235965C63647921828BF269ECC87A2B1C8CAD6C78B6E561B007
97BE2BC7CA32B4534075F6491BE959D1F635463E71679E527F4F456F774B2AF8
FEF3D8C63B283796A9AD847424B4E6508546C36223A3B17EB82A56592F27FC27
F1D49D5FF4BBC0E16231807AF7E195AA7D0D01C7566243448B222D57B811EAE6
DE9370F84E207DC9BEC731AD6040FD9B804FA14CA264B73136F9AF34390319F6
A543D5D4D7FDDDF2F76651E557683614521110DEC1CCAC426117DDA7D6CF1B8B
7879B21FDC78BAB3C944BCDCD6A65B67F3692F0A8D5E36FB783A63D4FBC9842E
2CBC2720A7206F42A99AEC79FBBA92A27965AF40A71E05E4BA8D7FC58C828226
7A8B47241F73590CE626EDA930A1D18D758636250D9D6A09E133378CD725F586
F40320EF186DDF87AF8C2F5470EADFF39C60384EB4DD859794CDD6E4AA8E8A7A
18E246579B5FD876A7C0AFB4D935B09F36A74412957D9BE1DA54DAC6239E5574
A9AB77DC4A6CFBAF23EC30579BA578299EA68B0BFC5B9B4EAA4D3CADB581AC57
6236C14F8F8D56406DC427BBE7913BA2990D22F36D646D3D31A6DB69512AACF4
0A46538C40FE5F6D369871E017069547B6CD9793652C2EE8EF391B88DC95DC58
DD90F27F47D996223903C9A02FB30DB43963F1DD6EAAE43F5E43F19B54FCA3EB
114CFCC68A6B5106C697C5876011047F6679201540AD102C571BF5DD26AA443B
6B73E80D855F5EBFF6A5BCEC484EFF7634D31618ED926015CF883D323F319D95
D79BEA40912E16BF834DA5B13327538D51A4BAD1812A8116E112FC23069DF8D1
62A2B400EDE05DF412F5D3AF808D720938F910A75A6EA7B176B0488AE937EFA2
750FF7E225B03CB971F9BA396ED3AC797CE18F1FCC7BAC5F8730F819479422D2
E5581826E4C1FC9E7257DB1DB4176AA716D471F6A487CBF59A38C4418DC66643
E92705B707B9910D8A7B7112F3201099ECCDC1B5FD811D9D6715047669C9BC4C
A7F2C89351D54B8ECC37EAF5F5696770D3A6DB1CCDD76474C9CA9A0EA58B35C7
4EDB45D756999D5E9FD505CB2D368D0F4BCC5D71D81727DC8B281004C337BE0C
58ABB6CF5ECD8FB584F05BCAD24CE50C6881B7AE1D85F31847808D3A61E139B0
D0A1F46B8984051AD193A3BC15C37579C0C1ED57874C83898C080BD6BE7879BA
AF2B79E737AF4BB4C63FE3730E533349E8F1489D91F013E82CFB4AAC71637BCF
5BAB6A4AEC3C2602D5FFD9263E6792C1769931316CD6106B2455BD404E194BCC
39BEADEE5BA7FB7CF21DC09758AB5D0E22A4D188AD0B9F3FB05DDCBCD3175E90
F34509A694696160ED7A5B83F71144141E5094E0EB6ECD4FC5D82E512BB16775
C605A72AD3417E20E03A794C0AB1BBD99C4F007A8EE703F49874F401C2C2DA8C
44148B89446CDD851EF49D560B4A6688701B5BA75809F3807228E3FFABF9382D
FD4A3C65E04F45CFA4D8DA7449F8A3D527201A8F6AB55321E109C51192F4130E
4D0278AC5E22F23C7CC8F7E463DE4417F5C71DCA9326327593D500A4E7121746
18947349C148C4B138BFC245161DF2E7AECE08C189C3A296C1D25000D85B2507
7D1B99780BFDDD4B53C9B98900E041D412DD7B21033A7E8CAA5D8C500D5A8077
361E9F4DA4830FC1EB6BAB5B00F0462FD058F56D5DE90C9E27434CF1FB8CB2A4
9B751F91BBE7828A1B5C4F0FA8FFA8D2FC378C37F55B0FAEB0EA050AD656FFE5
E5FC5F320183EBDBE13F0E314CDCA2CD0132068233800595BF10B599F5B30017
9CDFF53AC3839583F7B0414FD4ED07778D87B61961AC1B7B42E84515B1895C3A
E390D2D0F64D10B4C33827DBEFC9BD970A369D81321D07FFE5BEC0E0C33B1FC8
A47A01C21B1E2EA48EDFDA1A04A61FF81F9FF24586042B3462E11F2C55D24450
72053938C4BFFCEB6B36A8900D2DA460EBABB65F13576D8E414BFE3BD4372ACA
E98881801F9DE5D5A8F93E6F361D10F76277DD3BE956C234427B2495C0870929
9FB35B33A03D83F38BDD85AF337519F4D81E60E05A1E75730B22877513C9631C
716865C90D04790FBB04E81A47A390C698B919A07DFEA22D4060675072F4F66A
41C65BE5A3D1BB987FF57EC0F6B420A661B6D7DE2C7A4E6B6CE987D016716558
C74C40CA3FF21BF02AE20A0FF15DE7EDE33114DA531776B22E10C658ECB15A84
8DE69AC6C4F5E960C07806DE20CA3D67FE8C3969FE1D595F05F8AF79583AF103
4F22A823E7E0344AE3A5766B0AE56DAED368251AD4679A23662D879E6F3A7DD4
F9F173B3C6107FFA1289D94A8F1C955CE2012514E699B98A2E7CF9E475CA8C8C
F41E6E2DE1D926989B32434419E2B2185B4812610474492FBDBCE2BBE1D24158
A089324B263A7E3FB5E12E924259CE07D40B29C245EAFC171573EAB11887A539
E7A3475472EC0E859A81F2CFC0E59D63E7E40521A724D6BA23FFD94CD3FF64F8
8DC0A023F7AFFFBE091661A000F35EF840894F4A408A6E732E02EB3D891707FF
037DE0CBB1FDA854BA932B088BCFFE63A1F76CD61AB58DA8AB4DD4E041926057
BBFAE49A27A4D600BC33F2909B24C7B9FD5BF9C6C0248F4B56D46A697F9124C0
4F53191B98B39038718BFF05A884F2781F59C89172FB9A7FD18B135C4CA446E7
79E2533145ACF63AA45278B8463D1A4D7FC79E03E10E3B293125C583CC3838E6
2A2FFBC339CBB4E0AFAF255EB9119DF2EB15748EEE7CDD694AB75A93EBE83922
C5BC05E411D73E0C7241252614BCD8F662E2A5909806AA454315191E074AE0A9
E011685A8ED1F8802D4C151FA67FA0DD24DE144F6FD23202B4247997C8140B46
AB908123551EB811B13A0B3EACDED1B5757D8C699E363104E4496F5330D41995
F727C489D9EDE6BCB510E633E1F7AA99CEA5AFA113C68A1AD4E45DFA96C59316
D9E4206B890D11421C3051D0F42A34FF7BA634119CDB17A68F33334D01FABF1A
648C1C3019F1ACAC5F6234E8A2608BB63526F5C936760B77441CFBDC2EB19B31
8875FB20951EAA2AA8EFE6CE7D9B73EFFC23489718B43472444CC68CAFDB9CA1
B2970D6F0CAAD44FF82D244E12E07466E8993CEEAA16D9D7BA0FCA7C6EB9A70E
B6083CBA1AEA2A913ACF50AB4D0E5E6B78BF590C3909DD52F53D63B2F5486FF3
E52438D5D5577F42BE7B61771510C74A79FC52580FCDC0B0D1B56032927C6735
B346AE99357CC86CE7D45C0C4C67E3499EC9B3FF5EF3020E0E749585C2A80A8C
0AEB6A2D76938F6FC4DB8D57C9217F79BC3C042FF1D05BB08D403931341EEA63
A2FCCEC268E998BBE6F5DFD9E07DB403F7942CFE523AB415FA22C7BB9C7876AB
2ED866E94CC4406004B78650BBC064B1C43F3E095DA512E88F20D7F7C26AAA64
B612C70E619525295296B9133E84321A09CB22500988BCAFA32937B0C04A203F
4F99503ADBEA1FD563108599E00F5B5A9C0E5937AD0B417CB97F23AADD291A0B
8F8490D89B7622867557A47342675C0139D1B6BD409FF9AD2471EC5AC589D8E3
0152DD2901F5C750DE56825A871C5BD0BE48607D9DB446CECCAADA278DD433FF
BBF81D22F95E8ED8504458F0408B5D66CCDCEDC415313AD53B6D1563B7151F8C
C23C571C291CB46A460BEA33A5806FA08693DB0ED541B81E86AA8C98831B1B0A
68387E3C2315401E9CA7022B0C63A6D95DCEADB97CB29883797B140494C88031
C29930527B728999FBF2F97FBA2C451C64814D5721D67A5696F9F6EA873DC59D
851B237A37255909FAD4C48CEE5F0FD462507DEAB295AFE066E7A4A18E274022
3A2DAC5DE70E0333C6B9C5303C002707CC98E20FD2DB949AB348AE426F44C759
DE3E11D73B458E6C65F2050843DFCCA25CB6D6052938CA717AF2A99C3C6B8E5F
937B21BCF19DC0B36CDCDCD43F55B5EBC8481746F15DB093A777EA316A01D905
5D2ABC0E53CA49F2175BC4661BE6E5094662BC962E8C00F7EB9FC7BBCF32C5C5
DB7EC26B4B1E0912DA5EC5F2FED4D7112C8CEFB19B7FD80ECFB2F53B0BF1C703
54A3989F30B3CE5983B67D4A0B2C7142FE7E496C92A3CE5E711E4BCD7E13422B
9BD7ABE89C74C504B53446D9EA31AD40591DCA2CE469A242C16F3BE6751FBE16
0F94DBDC4F8C1F3C610C4499B4BE0210EAAAEF67D72B89C11D9758DD678BE695
95B6946B30B3BF75FE878711F997E3C56B42F936374654399D46DC69DF3475B6
3258F684B37D2CCC7EF59CD231A1D3E8447B69C368A0BAAE69EDBF8FD86ABBDA
80EA77359F3430BF93E72989EBE55734F6B35AA448E24F1109298423BA1120C2
428AB84C4F8B6FF1222141C3C0CF8DB0CA13C96FB1042DD818E11B1DB4C6FC06
9E2A5575103A9E291F599CF4618DC5A254C49A11E6F24FEB9B359EF8B982A1F2
F4BB5063ED80F2B75A5C7037A62D851B8A458EA3CEF14E5AF3240448BD5AE468
05CBEE40A973ACAEA1CB2503F381ED34CC19E542F827F5CC223DDD800110FE7E
2C5B219247B1ECE93C532CA37AFD1F509011F5D1401394F899FDF3494F44F216
A67187821669F5B082D383B8335165618C43036AE8245DFA1C9E8F95E91BCD90
4C1F302B26EB285F001DA1EEBAA31B495328DDCB25D2E3D2127ECDCDEAFB1B18
37C5F5E585921E0D5C62A65D36E82392A40FD13470E35B1075D3BD349DF07D00
1F575AA9005B4AE677AC81DEDF0F679173661BBE190A494DDE7988B879069373
76D14D8ADE18973DDC9DB6FE505E0833846921557245EB8FB652DF6731724C0C
D3EE8C84C9C841FC15DB2BD7D485444F15ECAC57C3F0EAD02D786A4F9517C64E
6485266A1D19FA0802434A858EADC4EBAD496DFE7531359D50C63806C945A302
66E945A9E23FAA2820612B20E31970126EA6D3201F4A4AA4012D57807F393FE4
52C6243FBD455D86AE3F6B3D97AA438B09B5A027BEA78BA71820F5206B6A6B1A
77380EC83337C9BC42A8853838FFA129B0A70841E0484B25151438DE7A0AC6EC
94B66D362D0643181378C2BE9A9E5D1D815A744D21F1515615B47B02D041C6C7
0D6E32D2C0D9F05CD01C1A164272813936DCE5EC41C4EDDABE3408F587E2315C
029FB5EF39D3F8D7E74299B0116294D9D0C8EB6440859FBDE860D0FDFF40A933
4F037339DBBEB07E5D5A2A0BFF7D49044E25059EC78C74CFDCADEBE505957915
22CBB1E3EDDA89B618EF660CC481E6CF302C1F5E46E47004A8548C234F1CEE2A
192834A02F79C8398C5E1B00DCB4BBA60C7097B1D79E5423CA019026934B779A
A06197FE08BA843E710B67DABAFCDC8B10714E7806372C9D1557BCA4DA129299
093C7A354A9FCCAAAD9A0F8F4242706F8C4E233DE26531753CD4ADA4BC217839
BDB25DC678F38F6FB46724C97A9D437AA9F43AD4845F1AE2206C82AAEC9299B0
931DE6CF911494398FAB7F9E054FE65275092098B42F75BEBA44D53575E8F885
89FCE77BEF0A916ED7F628A26341AA74A8BA9F3A533AF89BAA3B276EE3107850
3A160C2A9E7899D86A6F155019A4D5B9A4AFE31CAF8D4607BC1FE1B1DBADB454
E4B127AA97B4FEFDFDE19A26253988F0233777CC19B90D6B7A3493F003E1217D
F4EE213C093A1B58305D7E76E3276909C6335130A636A57F8E8C614036A964CA
B75F9B2A654BC0BD4FEC861174ABDA1738C3BA07D32B4CE8A9B98E45626DB6F6
783175061CBE3A68D52909EC7D2A5D00E1F00B31336BF647337113056AFD0015
1526A79E2F281C8CBFCD34272829C4F54E7258286AF1454030886E0F751B60C5
A9C1355115331AFF5955CD1B0EFCBA38A9C28328E0B274DA0D93F21AC629B6BF
F30B79C53836939EFC4FB9657D90A887F5580CE1409AA530F0461A6FDA608C30
0447564D113CC3159BB354E9C6766694A7035FE0A5E74D954F9861DD7E243E03
AF860D761698232595C7277561EFAD46B80C526CD5C50DD91FBEF0D2144EF102
A4CAE06F7BAB126277C841412D01FFC130DB73490D783D74E2A743CD8AE30DD4
5F1595DEC67A774517CE2BD2503BAAC9439BFBFDB04D63073CB45634A8B336B2
C35174FCCD178F1957AD34CA8C5662CB57CB07AC861F50D6C578A260E6135B93
B5527159699DDA977A6893718638C5BB2372CC581E71AC78C526E19F0494381B
4E7F204FA946D53A8FA7EEBC68DDB397B17AFFFC391E4C026D13F1B64F0FF3EC
366CB84A5F689A387071A9AB70BFB0C6BDB0F66C5C1AF8C7A17BAC61A23AE994
CFF2599E88233026A4FB2DC36E80383AED3743BD14EA770DE18A774768BA74DE
1E3DB397391458EEE9D05C5A8544B131E8A9C14F9EC60951884102FE6C813C8C
472866AAABDEE7D9D4AD39CC2E08638C82EFCDD4601A183A15E9336C0775A528
0482197ABBEA7CDFDE04282018AB76AA086DEEB15A3DDAB5FA56B7FF9A612A0B
DDDAA69553E1733A768D1B1FF67A57360F0F07E4B00E70676A9FCEC99CEC3A29
4439777F4C442ECC78DB21D6CFE4962EE0A3A3B7D47A6D6DA3B48DD8AD407B93
176E41C90DCF64ECAA7F46112AD33FBFD342B42D140AFADF5867F2D793B4F40E
CA903B07B94F3032BD05688AA66E0F49B522C2311B87EDC469489FF4BAB47C3D
D27C57EE405F8E8F3488C153CBCD0349016C344F32E8042E07AD052D005B7AA1
CA59DE0CD8EB39CF1CDD5BD6A0D8175CDF363E0A0BE042D074C78159DBFE573E
AF578F84E3A738991E3DC7BE68F9A60F0BA46F58AED919D3702F43ECEFF7E503
F17CD705823BDABB3221599708F9E416A16E1F7E2511D233DF689D2227DE8AF8
5760DF349351B23C43201A070AB3F803913F79769BB5BF72AAA3C780D3B46182
2CD7045680B4F61CEC6E2E61883BE6818F5E5474B92E657B6F1250A4BE57C0BD
B1B709A3070118D0B8D0F8D96B02CB5EEA822DB85E04F72344B2E6B9E29A6C73
993186E7CDDE157DCA64437DD72C385D9FEBADB7A32158CE7541D110782378E5
3FF05456432E6261F3C1509631C2B39D47164439ABACB03EC58DD80E5F595160
0D575E8010D6F314246EA22DF9E86C563D5840D5A03FAF83DEC4AFCEF2ECCDB6
3C27D6F73B0E1ADB561F4FADDAA9B7F0A5C3F0C3BABF051AAFF494F9ED79CBE2
CA66C111E0B905DC9314FC2085769259C6193F88A8F251336535F74D290AFD92
0105DC0513DB64D7DBDB4729A1BA8C363D5FB5D3AA5F9E26832108B1985B8C2F
72E4B0B8CD2A9A2747E3758EE11A0CD1D4663FF4F00516C9E0CDCA08A53D8BDD
F433E34FE80C89471858DD39CC6ABC5A7372D81A6587F44DB4224912AC8323AC
27E8298B1FE09C80FDE99A5CC7EF76A454DEBD0EA073F45E4CF95FF51CE1A5A7
2CE73404728654CF3DB4EB2FC6107A158D7999D9D79E7C58EB263073927B89BC
5A1E94688B3E4FDE0137076411B8C05F3877128B1496B04C950D237A2B5F9AC6
F973037CE5C3B4F01261EB6C57C82B6CB57C4FB229B6568051FD7C7B556BA2D7
34188F97A3DF25514E01EDF6243732FAFD767097D69DFA818AA99A4370CBAD4C
9E9B96DE8C55644213822EC2667C80F7232C4E7FB83156D8FE9827A7DE8EA5C3
02F3A9DE855B6F31FE3C8464232406FD805EDA854AE30B0ECD4F813FBCBDA01B
34F442FA35509DA4A856B5A6A2B0DFF6B692F126C25F29C919594081BB9085F5
B70CBB968C92CD14DE26CBB04D1291EB4974945AFA899A98BA8FAEBA26471E22
3A56E4B83456872A44365C67BC281EF46D1D6F858370A5AD14ED514856485F66
B1FB26E4F6A7B9DA3FD609882615014B3EFEA4C883F0869B1756934655FDB1F2
B56880233BF8050C423B006350D0AFB54AC1CAFD778DD042C3EC47490A0C5F54
36E70073A46B8D54F15C6E0CDDBD95AB22309EE906D5935EC3D20B779645C998
B2480E078DA3D8F363985FA0F55F23F9C401854A2E5F4EEDD7F3B618793BEFEB
E35D2C48ABEAA71D26B16E48BBDBB95558C61172A9D1356EE8BA4D6C88D7D984
D8A33CE41F7FF73685E516FF0B089BC4F0AE1A3D5B81B89B6F86AAFA8C8E9E5A
465ED74DD0CAB9FDA53A843D8E4261898C5A57A081D0D2CFB241C5C47138B575
D8EE5ADFB7D2F8122511CA937B03D9ADA4861A66F5D44FAB8D160363408BCB86
AE0E8892AF41530FB93B3C90D5CC1D2F546F06C68EE20512E0D4240F2FAA5061
2EBCB248B9F32E2AA50A6D44D00CC1D98A6BC3367DDC91AB1D4BC8848B5734EF
4207D24CC71B04C0041E0A6F5FC34846BB22BB50A7991ED156619B69D326BEED
4E1B91A0CF343BD89BBACEDEB5A146A2290516EB338D9434B2B1CA9E1794C86C
C2FA72880772854744645B3D99FA2E83C62F2068FDC82D8177AEA90D9CF3C088
38C2BF62D2A8987439FB0E6673C652184D8D65119366E42DB561C921A18A2546
9C665974EF17E6CBE141332F3111323F7FA7850B5747D5BFDA6D79DD8686F5A3
FE9B198AAFB19A92E86605019E4E536F5F3445CD9A0F66FFD5F45CCC3D64D46D
C778B9481032B6E004FE6B99C2A212272D87D3D9DD0E4B029B7916179B7A466F
50DCCB19E20250A01ED133D020B0F20EA0A5BD591F1EF30D7639EC2B98E49A04
3F97D6CA27E380C0928F02A7068ECADAD1208EE3746FD9930A10EF9A15E404C1
7E9DFDCB0D90F88476B23B9F170105FE85801C4BF3943340DCCFE101A463A7A4
DD61E37ECEFEE190ABE666BD2347CDDC92B9714086C7425755C12BD7276713CC
24A7009AD868E27AD196AE7EE976BF31989E6D68F18496341A5CF5986D9793D4
54955474301040864ADB26702F199812EAAA1A7FC640F449B5A7C8D41993E3E8
8E713093FAE4A9E4AB0A821AF46BAEB645F6DDDF001E2339C27F045E06725D8D
44B3B9D07ACEBB1DCB658B2642B2F226F66DBBBF9B20625706354D3344F64AB0
2A48C7EED1B498B655137045919522457F9926B8E208777C3837344959BA855E
61532B4FAA3DF011022A2881E919C020BE0ABFFA0734635124E6790AF2E3F406
3024C4AB9F16257FA571347C80936951A1C993F9783675F9BDAB619667CE7AE7
B46BF042D49779833C64D5152E329296FB7CE94C4A8B273277FE82217BE3E690
5123D372FB364D7FC243C1C4BE2EECBE31CC7CF14EFCBD98C52D78F182B091A7
BFF53588B85258931A0B64CFBB49B142CA521246748F7860A5A493EC736885C7
14BFB1D31538ED28AB47F8BCE2D2E2A6AF801F36E7A33B584AACBC6FD81C7E76
7A03CF3EA6B68912D16FB281A8F09AAC44A7BA3A302623118385587ECE8CBCF0
D89894D41CF1C7F8F9AA6B88BAAF9B825B9AB1A0804EAF84EF49D5251A7476ED
498E0504FDFDF8F28C244A00720DA4EE5BB5202075140E816B133307DA165296
503EE02F5D9050D2E544A7AFECA84DD5432B3B0940184A6832269BD579EE01C4
B544A15CCD4F64E376D686A4310C2AC20DF387A775AB956508D3B01B9404A89D
BAE7A9EF219CE2F989420204B69600D0EC70F43B2CB759D6C88C099E63E7A3EB
4D540DD8D3BCD76803900120184CE7D57703DB0A91357006730924CAB1CB8340
0E5549F27AA69EFF52ABB1F9DBF4059F13BC1855B1027287B48A3C742276E33B
F77097C3072E276CC08B519E700FC74B2D7812784F7E87FA2B5D894392853F2F
2AA42F7DD00E7BBAAB5AFC255EAB7A0053CCAEFF151D525C8CB447703D1DDF66
7FB2AF2C932E7A19DCE238F1721BF6D4760BC734E13948A363065C0929706EB4
EF8C416D5D2939F9B93FA40EC3A8344CB877A0032EB54144A501D2B8AAF2AE6D
A98FAA94E6DAD2421E5B8F1DBDEC44F03650B29EF0E8CAEFCFB234A30ABB10A3
5C06B3E00BD0E3B4275A85BE7051237AE6F04D3F837D3690D2D912C719D3F874
5BFF5B7CED57D2C6D9760FFCCADF6036CF4D8AEA150A20815DF11009D53D26FB
62C94357A676E1017ACF1A318EB4122D7579AEDF736D6FD85CD92D863A678066
6972E165B8168CDDD337408A62E9FD0D13109EA7201434476E3C43E50B62D1BA
C4D9391D5E3EFF7CB7C89986428FD4B4B1F6ED623636643FDF704999CDD02261
C2D9B9F857E6ACF15ABB667D36629DCEFCE9E2F7298BB078098E265B901EB6B3
B0323D4E91104A3B661CA93BC2088224A0A2A6F7796194084837CC6A7A71C668
DE596549BD332CA6E9D4101F7AC422F77198E1A035838A5C1AB8151FAC177B40
2E2DDD9E4620E4FB289F9FE46D44EB5CFF270F41EBF19C0EB1FF7DF9AB6F6F23
C5A3B73C15E8F07A98237FF62202D36D5D88F6705D0F1FCE5E53B782FDB79FB0
A567FA15F85A61D9D6E1DEF2D70E0FE2878FA1F3FC0EDEAA31F2CA28D0B27352
6EF29119A13A4407FA190A323C6257B8EBE534306FC94CCFF9FEAE142C1C9123
77AA8685CAE4F16E4F5DCCB18C735568DAA33C8081DF61BE7CF1D06F0EA46AFC
2913048234C667D9B634F9FB1305859CE24674BD9BE520CEF1E2762251B40C2C
8C9D6F30FC6FE5D0BDF448E6278FF2797F55C2FB0DDF4816059BDA971EC5D06F
C252C6D17A526688ED1F6F92D64C679744B33AD62814EC2124ACF61A8184F004
A8A1EB672F312C6D5739802AC0152B1214F6D3BAD09AF89847E29FC8853149BD
61A003453D8A006700DB73BE960ADC632805524452BB5B676B4A0EF64273AF13
B778B83637298DD4AB83A07A67D7ED25FB8C2614F66D1043AAF59791FF8EA8EB
3CAD17238B01648A55729FFA5856BDD12D061E4DACDCBAEB6E4433649DE2069E
2C16B9567EF7ED23DEA0688A9B8DDADCEBEBD71B5A1DD4505E6654B67639317A
31B5A1B5495E1FF81476CE0CC883518777A47AFBA60757772282AA58804A75EB
E480DF55A578948547FE6DC9E2B15DB076A0ABC513791345C0B5C928B49DFE13
ECF8967D8BBCAE7E51E811EE5FAEB7162FF52D4A39C499BC1D788E1204921E54
72697837078C64FF68942F60B08AE1161E7881C44B76CB1E55C2152A3342BF4B
8D1A5BEDD0D1100D0DA72FB6560B06AFA7ABA0B3D7645D2ADBC62EDEBCD64463
2F948124B4865EE13873421073724E28868F2C39D997E63A5B278BB27E78C6CB
B20682EB174E0E010F33B8436679B185538D2E6D56742BF950AB8B602F1B31C5
1AEB1B910AF9CE4841BEB3E8CED8D5BC8A6CF1BF0A8BE923C4A9D82F0E50A573
5A94347C7E3CFE5E61AD16D479234E5B3C00D88274D6C6AE82461ADAAC6C02E7
C3457E592D8D640D6D5517A304D795F8241591338CED09
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
TeXDict begin 40258437 52099154 1000 600 600 (unnamed_.dvi)
@start /Fa 134[44 44 2[46 32 33 33 1[46 42 46 69 23 2[23
1[42 25 37 1[37 1[42 12[60 46 61 1[57 1[62 76 52 2[30
2[54 1[63 2[62 7[42 42 42 42 42 42 42 42 42 42 1[23 28
38[60 4[69 1[{}42 83.022 /CMR10 rf end
%%EndProlog
%%BeginSetup
%%Feature: *Resolution 600dpi
TeXDict begin
 end
%%EndSetup
TeXDict begin 1 0 bop Black Black 0.4 0.4 0.4 TeXcolorrgb
455 2715 a
 currentpoint currentpoint translate 0.96637 0.96637 scale neg exch
neg exch translate
 455 2715 a 455 2715 a
 /PSfrag where{pop(s06)[[0()1 0]](s07)[[1(b)1 0]](s08)[[2(t)1 0]](s09)[[3(b)1
0]](x01)[[4(t)1 0]](x02)[[5(t)1 0]](x03)[[6(t)1 0]](x04)[[7(t)1 0]](x05)[[8(t)1
0]](x06)[[9(t)1 0]](x07)[[10(t)1 0]](x08)[[11(t)1 0]](x09)[[12(t)1
0]](v01)[[13(r)1 0]](v02)[[14(r)1 0]](v03)[[15(r)1 0]](v04)[[16(r)1
0]](v05)[[17(r)1 0]](v06)[[18(r)1 0]](v07)[[19(r)1 0]](v08)[[20(r)1
0]](v09)[[21(r)1 0]]22 0 -1/Begin PSfrag}{userdict /PSfrag{pop}put}ifelse
 455 2715 a @beginspecial
45 @llx 20 @lly 397 @urx 319 @ury 3520 @rwi @setspecial
%%BeginDocument: unnamed.eps
%!PS-Adobe-2.0 EPSF-1.2
%%Creator: MATLAB, The Mathworks, Inc. Version 7.5.0.338 (R2007b). Operating System: Linux 2.6.23.8-34.fc7 #1 SMP Thu Nov 22 23:05:33 EST 2007 i686.
%%Title: /home/matthew/Thesis_07/work/HTGA_DSM/DSM/DT/LP/code/unnamed.eps
%%CreationDate: 12/24/2007  10:06:55
%%DocumentNeededFonts: Helvetica
%%DocumentProcessColors: Cyan Magenta Yellow Black
%%Extensions: CMYK
%%Pages: 1
%%BoundingBox:    45    20   397   319
%%EndComments

%%BeginProlog
% MathWorks dictionary
/MathWorks 160 dict begin
% definition operators
/bdef {bind def} bind def
/ldef {load def} bind def
/xdef {exch def} bdef
/xstore {exch store} bdef
% operator abbreviations
/c  /clip ldef
/cc /concat ldef
/cp /closepath ldef
/gr /grestore ldef
/gs /gsave ldef
/mt /moveto ldef
/np /newpath ldef
/cm /currentmatrix ldef
/sm /setmatrix ldef
/rm /rmoveto ldef
/rl /rlineto ldef
/s {show newpath} bdef
/sc {setcmykcolor} bdef
/sr /setrgbcolor ldef
/sg /setgray ldef
/w /setlinewidth ldef
/j /setlinejoin ldef
/cap /setlinecap ldef
/rc {rectclip} bdef
/rf {rectfill} bdef
% page state control
/pgsv () def
/bpage {/pgsv save def} bdef
/epage {pgsv restore} bdef
/bplot /gsave ldef
/eplot {stroke grestore} bdef
% orientation switch
/portraitMode 0 def /landscapeMode 1 def /rotateMode 2 def
% coordinate system mappings
/dpi2point 0 def
% font control
/FontSize 0 def
/FMS {/FontSize xstore findfont [FontSize 0 0 FontSize neg 0 0]
  makefont setfont} bdef
/reencode {exch dup where {pop load} {pop StandardEncoding} ifelse
  exch dup 3 1 roll findfont dup length dict begin
  { 1 index /FID ne {def}{pop pop} ifelse } forall
  /Encoding exch def currentdict end definefont pop} bdef
/isroman {findfont /CharStrings get /Agrave known} bdef
/FMSR {3 1 roll 1 index dup isroman {reencode} {pop pop} ifelse
  exch FMS} bdef
/csm {1 dpi2point div -1 dpi2point div scale neg translate
 dup landscapeMode eq {pop -90 rotate}
  {rotateMode eq {90 rotate} if} ifelse} bdef
% line types: solid, dotted, dashed, dotdash
/SO { [] 0 setdash } bdef
/DO { [.5 dpi2point mul 4 dpi2point mul] 0 setdash } bdef
/DA { [6 dpi2point mul] 0 setdash } bdef
/DD { [.5 dpi2point mul 4 dpi2point mul 6 dpi2point mul 4
  dpi2point mul] 0 setdash } bdef
% macros for lines and objects
/L {lineto stroke} bdef
/MP {3 1 roll moveto 1 sub {rlineto} repeat} bdef
/AP {{rlineto} repeat} bdef
/PDlw -1 def
/W {/PDlw currentlinewidth def setlinewidth} def
/PP {closepath eofill} bdef
/DP {closepath stroke} bdef
/MR {4 -2 roll moveto dup  0 exch rlineto exch 0 rlineto
  neg 0 exch rlineto closepath} bdef
/FR {MR stroke} bdef
/PR {MR fill} bdef
/L1i {{currentfile picstr readhexstring pop} image} bdef
/tMatrix matrix def
/MakeOval {newpath tMatrix currentmatrix pop translate scale
0 0 1 0 360 arc tMatrix setmatrix} bdef
/FO {MakeOval stroke} bdef
/PO {MakeOval fill} bdef
/PD {currentlinewidth 2 div 0 360 arc fill
   PDlw -1 eq not {PDlw w /PDlw -1 def} if} def
/FA {newpath tMatrix currentmatrix pop translate scale
  0 0 1 5 -2 roll arc tMatrix setmatrix stroke} bdef
/PA {newpath tMatrix currentmatrix pop	translate 0 0 moveto scale
  0 0 1 5 -2 roll arc closepath tMatrix setmatrix fill} bdef
/FAn {newpath tMatrix currentmatrix pop translate scale
  0 0 1 5 -2 roll arcn tMatrix setmatrix stroke} bdef
/PAn {newpath tMatrix currentmatrix pop translate 0 0 moveto scale
  0 0 1 5 -2 roll arcn closepath tMatrix setmatrix fill} bdef
/vradius 0 def /hradius 0 def /lry 0 def
/lrx 0 def /uly 0 def /ulx 0 def /rad 0 def
/MRR {/vradius xdef /hradius xdef /lry xdef /lrx xdef /uly xdef
  /ulx xdef newpath tMatrix currentmatrix pop ulx hradius add uly
  vradius add translate hradius vradius scale 0 0 1 180 270 arc 
  tMatrix setmatrix lrx hradius sub uly vradius add translate
  hradius vradius scale 0 0 1 270 360 arc tMatrix setmatrix
  lrx hradius sub lry vradius sub translate hradius vradius scale
  0 0 1 0 90 arc tMatrix setmatrix ulx hradius add lry vradius sub
  translate hradius vradius scale 0 0 1 90 180 arc tMatrix setmatrix
  closepath} bdef
/FRR {MRR stroke } bdef
/PRR {MRR fill } bdef
/MlrRR {/lry xdef /lrx xdef /uly xdef /ulx xdef /rad lry uly sub 2 div def
  newpath tMatrix currentmatrix pop ulx rad add uly rad add translate
  rad rad scale 0 0 1 90 270 arc tMatrix setmatrix lrx rad sub lry rad
  sub translate rad rad scale 0 0 1 270 90 arc tMatrix setmatrix
  closepath} bdef
/FlrRR {MlrRR stroke } bdef
/PlrRR {MlrRR fill } bdef
/MtbRR {/lry xdef /lrx xdef /uly xdef /ulx xdef /rad lrx ulx sub 2 div def
  newpath tMatrix currentmatrix pop ulx rad add uly rad add translate
  rad rad scale 0 0 1 180 360 arc tMatrix setmatrix lrx rad sub lry rad
  sub translate rad rad scale 0 0 1 0 180 arc tMatrix setmatrix
  closepath} bdef
/FtbRR {MtbRR stroke } bdef
/PtbRR {MtbRR fill } bdef
/stri 6 array def /dtri 6 array def
/smat 6 array def /dmat 6 array def
/tmat1 6 array def /tmat2 6 array def /dif 3 array def
/asub {/ind2 exch def /ind1 exch def dup dup
  ind1 get exch ind2 get sub exch } bdef
/tri_to_matrix {
  2 0 asub 3 1 asub 4 0 asub 5 1 asub
  dup 0 get exch 1 get 7 -1 roll astore } bdef
/compute_transform {
  dmat dtri tri_to_matrix tmat1 invertmatrix 
  smat stri tri_to_matrix tmat2 concatmatrix } bdef
/ds {stri astore pop} bdef
/dt {dtri astore pop} bdef
/db {2 copy /cols xdef /rows xdef mul dup 3 mul string
  currentfile exch readhexstring pop
  dup 0 3 index getinterval /rbmap xdef
  dup 2 index dup getinterval /gbmap xdef
  1 index dup 2 mul exch getinterval /bbmap xdef pop pop}bdef
/it {gs np dtri aload pop moveto lineto lineto cp c
  cols rows 8 compute_transform 
  rbmap gbmap bbmap true 3 colorimage gr}bdef
/il {newpath moveto lineto stroke}bdef
currentdict end def
%%EndProlog

%%BeginSetup
MathWorks begin

0 cap

end
%%EndSetup

%%Page: 1 1
%%BeginPageSetup
%%PageBoundingBox:    45    20   397   319
MathWorks begin
bpage
%%EndPageSetup

%%BeginObject: obj1
bplot

/dpi2point 12 def
portraitMode 0000 3828 csm

  546    -1  4228  3589 MR c np
87 dict begin %Colortable dictionary
/c0 { 0.000000 0.000000 0.000000 sr} bdef
/c1 { 1.000000 1.000000 1.000000 sr} bdef
/c2 { 0.900000 0.000000 0.000000 sr} bdef
/c3 { 0.000000 0.820000 0.000000 sr} bdef
/c4 { 0.000000 0.000000 0.800000 sr} bdef
/c5 { 0.910000 0.820000 0.320000 sr} bdef
/c6 { 1.000000 0.260000 0.820000 sr} bdef
/c7 { 0.000000 0.820000 0.820000 sr} bdef
c0
1 j
1 sg
   0    0 5115 3838 PR
6 w
0 2945 3854 0 0 -2945 774 3415 4 MP
PP
-3854 0 0 2945 3854 0 0 -2945 774 3415 5 MP stroke
4 w
DO
SO
6 w
0.4 sg
 774 3415 mt 4628 3415 L
 774  470 mt 4628  470 L
 774 3415 mt  774  470 L
4628 3415 mt 4628  470 L
 774 3415 mt 4628 3415 L
 774 3415 mt  774  470 L
 774 3415 mt  774 3376 L
 774  470 mt  774  508 L
%%IncludeResource: font Helvetica
/Helvetica /ISOLatin1Encoding 120 FMSR

 678 3560 mt 
(x01) s
1255 3415 mt 1255 3376 L
1255  470 mt 1255  508 L
1159 3560 mt 
(x02) s
1737 3415 mt 1737 3376 L
1737  470 mt 1737  508 L
1641 3560 mt 
(x03) s
2219 3415 mt 2219 3376 L
2219  470 mt 2219  508 L
2123 3560 mt 
(x04) s
2701 3415 mt 2701 3376 L
2701  470 mt 2701  508 L
2605 3560 mt 
(x05) s
3182 3415 mt 3182 3376 L
3182  470 mt 3182  508 L
3086 3560 mt 
(x06) s
3664 3415 mt 3664 3376 L
3664  470 mt 3664  508 L
3568 3560 mt 
(x07) s
4146 3415 mt 4146 3376 L
4146  470 mt 4146  508 L
4050 3560 mt 
(x08) s
4628 3415 mt 4628 3376 L
4628  470 mt 4628  508 L
4532 3560 mt 
(x09) s
 774 3415 mt  812 3415 L
4628 3415 mt 4589 3415 L
 546 3459 mt 
(v01) s
 774 3046 mt  812 3046 L
4628 3046 mt 4589 3046 L
 546 3090 mt 
(v02) s
 774 2678 mt  812 2678 L
4628 2678 mt 4589 2678 L
 546 2722 mt 
(v03) s
 774 2310 mt  812 2310 L
4628 2310 mt 4589 2310 L
 546 2354 mt 
(v04) s
 774 1942 mt  812 1942 L
4628 1942 mt 4589 1942 L
 546 1986 mt 
(v05) s
 774 1574 mt  812 1574 L
4628 1574 mt 4589 1574 L
 546 1618 mt 
(v06) s
 774 1206 mt  812 1206 L
4628 1206 mt 4589 1206 L
 546 1250 mt 
(v07) s
 774  838 mt  812  838 L
4628  838 mt 4589  838 L
 546  882 mt 
(v08) s
 774  470 mt  812  470 L
4628  470 mt 4589  470 L
 546  514 mt 
(v09) s
 774 3415 mt 4628 3415 L
 774  470 mt 4628  470 L
 774 3415 mt  774  470 L
4628 3415 mt 4628  470 L
gs 774 470 3855 2946 MR c np
DO
1447 0 2408 0 774 1942 3 MP stroke
SO
gs 3089 1536 164 813 MR c np
/c8 { 0.000000 0.000000 1.000000 sr} bdef
c8
  36   36 3162 1609 FO
  36   36 3162 2275 FO
  36   36 3179 1804 FO
  36   36 3179 2080 FO
gr

c8
gs 1907 923 652 2039 MR c np
2460  971 mt 2510 1021 L
2510  971 mt 2460 1021 L
2460 2863 mt 2510 2913 L
2510 2863 mt 2460 2913 L
1955 1574 mt 2005 1624 L
2005 1574 mt 1955 1624 L
1955 2260 mt 2005 2310 L
2005 2260 mt 1955 2310 L
gr

-6 -3 -15 -8 -16 -4 -18 -2 -33 6 -18 8 -33 20 -54 53 
-13 18 -15 24 -37 93 -8 36 -3 89 6 44 15 59 55 110 
37 47 60 59 56 41 81 45 69 27 92 24 71 9 87 1 
61 -7 69 -16 43 -16 23 -10 22 -13 99 -121 2485 996 31 MP stroke
/c9 { 0.000000 0.750000 0.750000 sr} bdef
c9
6 -12 17 -24 16 -15 19 -12 35 -12 20 -5 36 -7 65 -12 
17 -4 22 -4 72 -16 23 -5 55 -13 25 -6 33 -9 62 -15 
28 -6 37 -9 30 -7 39 -9 32 -7 41 -8 33 -7 44 -7 
34 -5 44 -5 33 -3 20 -1 23 -1 238 41 1980 2285 31 MP stroke
/c10 { 1.000000 0.000000 0.000000 sr} bdef
c10
6 12 17 24 16 15 19 12 35 12 20 5 36 7 65 12 
17 4 22 4 72 16 23 5 55 13 25 6 33 9 62 15 
28 6 37 9 30 7 39 9 32 7 41 8 33 7 44 7 
34 5 44 5 33 3 20 1 23 1 238 -41 1980 1599 31 MP stroke
/c11 { 0.000000 0.500000 0.000000 sr} bdef
c11
-6 3 -15 8 -16 4 -18 2 -33 -6 -18 -8 -33 -20 -54 -53 
-13 -18 -15 -24 -37 -93 -8 -36 -3 -89 6 -44 15 -59 55 -110 
37 -47 60 -59 56 -41 81 -45 69 -27 92 -24 71 -9 87 -1 
61 7 69 16 43 16 23 10 22 13 99 121 2485 2888 31 MP stroke
0.4 sg
-67 119 -102 217 -85 223 -66 225 -47 229 -29 230 -9 231 9 231 
29 230 47 229 66 225 85 223 102 217 67 117 2777 470 15 MP stroke
DO
-7 12 -58 107 -53 108 -49 109 -45 111 -40 112 -35 112 -31 113 
-26 114 -21 115 -17 115 -12 115 -7 115 -2 116 3182 1942 15 MP stroke
-6 -10 -58 -107 -53 -108 -49 -109 -45 -111 -40 -112 -35 -112 -31 -113 
-26 -114 -21 -115 -17 -115 -12 -115 -7 -115 -2 -116 3182 1942 15 MP stroke
SO
gr

0 sg
2536  183 mt 
(s07) s

end %%Color Dict

eplot
%%EndObject

epage
end

showpage

%%Trailer
%%EOF

%%EndDocument
 @endspecial 455 2715 a
 /End PSfrag
 455 2715 a 455 433 a
 /Hide PSfrag
 455 433
a -286 491 a Fa(PSfrag)27 b(replacemen)n(ts)p -286 520
741 4 v 455 523 a
 /Unhide PSfrag
 455 523 a 434 573 a
  {
 434 573 a 0.4 0.4 0.4
TeXcolorrgb 0.2 0.2 0.2 TeXcolorrgb 413 593 a Fa(0)p
0.4 0.4 0.4 TeXcolorrgb 0.4 0.4 0.4 TeXcolorrgb 434 573
a
  } 0/Place PSfrag
 434 573 a -143 723 a
  {
 -143 723 a 0.4 0.4 0.4 TeXcolorrgb
0 0 0 TeXcolorrgb -741 692 a Fa(\001\006M)h(NTF)g(Ro)r(ot-Lo)r(cus)f
(Diagram)p 0.4 0.4 0.4 TeXcolorrgb 0.4 0.4 0.4 TeXcolorrgb
-143 723 a
  } 1/Place PSfrag
 -143 723 a 278 723 a
  {
 278 723 a 0.4 0.4 0.4
TeXcolorrgb 0 0 0 TeXcolorrgb 102 792 a Fa(Real)h(Axis)p
0.4 0.4 0.4 TeXcolorrgb 0.4 0.4 0.4 TeXcolorrgb 278 723
a
  } 2/Place PSfrag
 278 723 a 175 922 a
  {
 175 922 a 0.4 0.4 0.4 TeXcolorrgb
0 0 0 TeXcolorrgb -104 892 a Fa(Imaginary)e(Axis)p 0.4 0.4 0.4
TeXcolorrgb 0.4 0.4 0.4 TeXcolorrgb 175 922 a
  } 3/Place PSfrag
 175 922
a 402 968 a
  {
 402 968 a 0.4 0.4 0.4 TeXcolorrgb 349 1021
a Fa(0.5)p 0.4 0.4 0.4 TeXcolorrgb 402 968 a
  } 4/Place PSfrag
 402 968
a 402 1068 a
  {
 402 1068 a 0.4 0.4 0.4 TeXcolorrgb 349 1121
a Fa(0.6)p 0.4 0.4 0.4 TeXcolorrgb 402 1068 a
  } 5/Place PSfrag
 402 1068
a 402 1167 a
  {
 402 1167 a 0.4 0.4 0.4 TeXcolorrgb 349 1221
a Fa(0.7)p 0.4 0.4 0.4 TeXcolorrgb 402 1167 a
  } 6/Place PSfrag
 402 1167
a 402 1267 a
  {
 402 1267 a 0.4 0.4 0.4 TeXcolorrgb 349 1320
a Fa(0.8)p 0.4 0.4 0.4 TeXcolorrgb 402 1267 a
  } 7/Place PSfrag
 402 1267
a 402 1366 a
  {
 402 1366 a 0.4 0.4 0.4 TeXcolorrgb 349 1420
a Fa(0.9)p 0.4 0.4 0.4 TeXcolorrgb 402 1366 a
  } 8/Place PSfrag
 402 1366
a 434 1466 a
  {
 434 1466 a 0.4 0.4 0.4 TeXcolorrgb 413 1520
a Fa(1)p 0.4 0.4 0.4 TeXcolorrgb 434 1466 a
  } 9/Place PSfrag
 434 1466
a 402 1566 a
  {
 402 1566 a 0.4 0.4 0.4 TeXcolorrgb 349 1619
a Fa(1.1)p 0.4 0.4 0.4 TeXcolorrgb 402 1566 a
  } 10/Place PSfrag
 402 1566
a 402 1665 a
  {
 402 1665 a 0.4 0.4 0.4 TeXcolorrgb 349 1719
a Fa(1.2)p 0.4 0.4 0.4 TeXcolorrgb 402 1665 a
  } 11/Place PSfrag
 402 1665
a 402 1765 a
  {
 402 1765 a 0.4 0.4 0.4 TeXcolorrgb 349 1818
a Fa(1.3)p 0.4 0.4 0.4 TeXcolorrgb 402 1765 a
  } 12/Place PSfrag
 402 1765
a 455 1891 a
  {
 455 1891 a 0.4 0.4 0.4 TeXcolorrgb 321 1918
a Fa(-0.4)p 0.4 0.4 0.4 TeXcolorrgb 455 1891 a
  } 13/Place PSfrag
 455 1891
a 455 1991 a
  {
 455 1991 a 0.4 0.4 0.4 TeXcolorrgb 321 2018
a Fa(-0.3)p 0.4 0.4 0.4 TeXcolorrgb 455 1991 a
  } 14/Place PSfrag
 455 1991
a 455 2091 a
  {
 455 2091 a 0.4 0.4 0.4 TeXcolorrgb 321 2117
a Fa(-0.2)p 0.4 0.4 0.4 TeXcolorrgb 455 2091 a
  } 15/Place PSfrag
 455 2091
a 455 2190 a
  {
 455 2190 a 0.4 0.4 0.4 TeXcolorrgb 321 2217
a Fa(-0.1)p 0.4 0.4 0.4 TeXcolorrgb 455 2190 a
  } 16/Place PSfrag
 455 2190
a 455 2290 a
  {
 455 2290 a 0.4 0.4 0.4 TeXcolorrgb 413 2317
a Fa(0)p 0.4 0.4 0.4 TeXcolorrgb 455 2290 a
  } 17/Place PSfrag
 455 2290
a 455 2389 a
  {
 455 2389 a 0.4 0.4 0.4 TeXcolorrgb 348 2416
a Fa(0.1)p 0.4 0.4 0.4 TeXcolorrgb 455 2389 a
  } 18/Place PSfrag
 455 2389
a 455 2489 a
  {
 455 2489 a 0.4 0.4 0.4 TeXcolorrgb 348 2516
a Fa(0.2)p 0.4 0.4 0.4 TeXcolorrgb 455 2489 a
  } 19/Place PSfrag
 455 2489
a 455 2589 a
  {
 455 2589 a 0.4 0.4 0.4 TeXcolorrgb 348 2615
a Fa(0.3)p 0.4 0.4 0.4 TeXcolorrgb 455 2589 a
  } 20/Place PSfrag
 455 2589
a 455 2688 a
  {
 455 2688 a 0.4 0.4 0.4 TeXcolorrgb 348 2715
a Fa(0.4)p 0.4 0.4 0.4 TeXcolorrgb 455 2688 a
  } 21/Place PSfrag
 455 2688
a 455 2715 a
 currentpoint currentpoint translate 1 0.96637 div 1 0.96637 div scale
neg exch neg exch translate
 455 2715 a Black Black Black eop end
%%Trailer

userdict /end-hook known{end-hook}if
%%EOF
